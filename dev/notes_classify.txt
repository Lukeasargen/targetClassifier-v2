cd projects
cd targetClassifier-v2
conda activate uas_vision

tensorboard --logdir logs/classify/
--------------------------------------------------------------------------------
Old dataloader
11.50 seconds with 0 workers. 0.72 seconds per batch. 0.007 GB ram.
12.59 seconds with 1 workers. 0.79 seconds per batch. 0.326 GB ram.
7.95 seconds with 2 workers. 0.50 seconds per batch. 0.643 GB ram.
7.72 seconds with 3 workers. 0.48 seconds per batch. 0.968 GB ram.
7.40 seconds with 4 workers. 0.46 seconds per batch. 1.291 GB ram.
8.31 seconds with 5 workers. 0.52 seconds per batch. 1.607 GB ram.
8.78 seconds with 6 workers. 0.55 seconds per batch. 1.922 GB ram.
9.79 seconds with 7 workers. 0.61 seconds per batch. 2.226 GB ram.
10.45 seconds with 8 workers. 0.65 seconds per batch. 2.528 GB ram.

New dataloader - 4x faster with 8 workers, and it uses way less memory
12.40 seconds with 0 workers. 0.77 seconds per batch. 0.514 GB ram.
12.84 seconds with 1 workers. 0.80 seconds per batch. 0.569 GB ram.
6.83 seconds with 2 workers. 0.43 seconds per batch. 0.543 GB ram.
5.16 seconds with 3 workers. 0.32 seconds per batch. 0.552 GB ram.
3.64 seconds with 4 workers. 0.23 seconds per batch. 0.566 GB ram.
3.65 seconds with 5 workers. 0.23 seconds per batch. 0.589 GB ram.
2.97 seconds with 6 workers. 0.19 seconds per batch. 0.584 GB ram.
3.07 seconds with 7 workers. 0.19 seconds per batch. 0.562 GB ram.
2.43 seconds with 8 workers. 0.15 seconds per batch. 0.634 GB ram.
--------------------------------------------------------------------------------
python classify.py 
Init and setup
--seed=42 --name=classify --workers=4 --gpus=0
--benchmark --precision=32
Dataset
--img_size=32 --min_size=28 --alias_factor=1 --fill_prob=0.5 
--backgrounds=images/backgrounds
classify no backgrounds --mean 0.5368893  0.43507764 0.3849545 --std 0.13682073 0.13410869 0.14616862
classify backgrounds --mean 0.43949696 0.4287838  0.3273663 --std 0.18663725 0.1653652  0.18666378
segment backgrounds --mean 0.46986762 0.48680103 0.29467997 --std 0.18487453 0.17479563 0.19131261
Model parameters
--filters 16 16 32 64
--blocks 2 2 2
--act=gelu, leaky_relu, relu, relu6, sigmoid, silu, tanh
--downsample=avg, max, blur
--bottleneck_ratio=0
--se_ratio=0
--stochastic_depth=0
--alpha=1.0
Training hyperparameter
--train_size=320 --batch=32 --epochs=1
--add_noise=0.01
Optimizer
--opt=sgd --lr=6e-2 --weight_decay=1e-5 --momentum=0.9 --nesterov
--opt=adam --lr=4e-3
--opt=adamw --lr=4e-3 --weight_decay=5e-4
--lr_warmup_steps=0
--accumulate=1
--grad_clip=value --clip_value=0.0
Scheduler
--scheduler=step --milestones 10 15 --lr_gamma=0.1
--scheduler=exp --lr_gamma=0.95
--scheduler=plateau --plateau_patience=20 --lr_gamma=0.2 --min_lr=1e-6
--------------------------------------------------------------------------------
todo
make targets without letter and mark as not targets

beta and alpha scaling

spatial transformer to crop
compare ST features to main features, add projection heads

stop training task after threshold, (eg >99% has_target)
set max size in load_backgrounds to resize and save space

non linear classifier heads
spatial pyramidal pooling, deep layer aggregation (deeplabv3)

--------------------------------------------------------------------------------
test commands

v7 - fixed the angle labels
v9 - upgraded to resnet backbone
v10 - add --se_ratio=0.5
v11 - --act=gelu
python classify.py --seed=42 --name=classify --workers=6 --gpus=0 --img_size=32 --min_size=28 --alias_factor=2 --fill_prob=0.5 --backgrounds=C:\Users\lukeasargen\projects\aerial_backgrounds --mean 0.43949696 0.4287838  0.3273663 --std 0.18663725 0.1653652  0.18666378 --filters 16 16 32 64 --blocks 2 2 2 --act=gelu --train_size=12800 --batch=128 --epochs=170 --opt=sgd --lr=4e-2 --weight_decay=5e-4 --momentum=0.9 --nesterov --lr_warmup_steps=1000 --scheduler=step --milestones 100 140 --lr_gamma=0.2
v12 - --act=silu
v14 - more filters --filters 32 32 64 128
v15 - --batch=256, same number of steps
v16 - increase --fill_prob=0.75
v17 - --img_size=40
v18 - --downsample=blur
v19 - --downsample=max
v20 - --stochastic_depth=0.25
v21 - --bottleneck_ratio=0.5
v22 - --filters 32 32 64 128 --bottleneck_ratio=0.5
v23 - final try1 for input_size=32
python classify.py --workers=8 --gpus=0 --img_size=32 --min_size=28 --alias_factor=2 --fill_prob=0.75 --backgrounds=C:\Users\lukeasargen\projects\aerial_backgrounds --mean 0.43949696 0.4287838  0.3273663 --std 0.18663725 0.1653652  0.18666378 --filters 32 32 64 128 --blocks 2 2 2 --act=gelu --train_size=25600 --batch=256 --epochs=170 --opt=sgd --lr=4e-2 --weight_decay=5e-4 --momentum=0.9 --nesterov --lr_warmup_steps=1000 --scheduler=step --milestones 100 140 --lr_gamma=0.2
v25 - img_size=48, add_noise=0.042
add has_letter task
v28 - img_size=48, add_noise=0.06, fill_prob=0.9
v29 - --add_noise=0.08
add weight standarization

python classify.py --workers=8 --gpus=0 --img_size=48 --min_size=30 --alias_factor=2 --fill_prob=0.8 --backgrounds=C:\Users\lukeasargen\projects\aerial_backgrounds --mean 0.40229252 0.3978662  0.3113497 --std 0.18565857 0.16436274 0.18099944 --filters 32 32 64 128 --blocks 2 2 2 --act=gelu --alpha=0.2 --train_size=25600 --batch=256 --epochs=95 --add_noise=0.08 --opt=sgd --lr=4e-2 --weight_decay=5e-4 --momentum=0.9 --nesterov --lr_warmup_steps=1000 --scheduler=step --milestones 70 85 --lr_gamma=0.2

